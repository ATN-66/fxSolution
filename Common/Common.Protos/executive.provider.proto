syntax = "proto3";
package provider.grpc;
import "timestamp.proto";
import "symbol.proto";

enum MessageType {
    INFO = 0;
    COMMAND = 1;
}

message GeneralRequest {
    MessageType type = 1;
    InfoRequest info = 2;
    CommandRequest command = 3;
}

message GeneralResponse {
    MessageType type = 1;
    InfoResponse info = 2;
    CommandResponse command = 3;
}

message InfoRequest {
     enum Code {
        TERMINAL_INFO = 0;
        ACCOUNT_INFO = 1;
        ORDER_INFO = 2;
        //more info...
    }

    int32 ticket = 1;
    string details = 2;
}

message InfoResponse {
     enum Code {
        TERMINAL_INFO = 0;
        ACCOUNT_INFO = 1;
        ORDER_INFO = 2;
        //more info...
    }

    int32 ticket = 1;
    string details = 2;
}

message CommandRequest {
     enum Code {
        ORDER_OPEN = 0;
        ORDER_CLOSE = 1;
        // any other actions...
    }

    //ORDER DETAILS HERE

    int32 ticket = 1;
    string details = 2;
}

message CommandResponse {
     enum Code {
        ORDER_OPEN = 0;
        ORDER_CLOSE = 1;
        // any other actions...
    }

    //ORDER DETAILS HERE

    int32 ticket = 1;
    string details = 2;
}

service ExecutiveProvider  {
    rpc CommunicateAsync(stream GeneralRequest) returns (stream GeneralResponse);
}